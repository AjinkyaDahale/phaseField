# ----------------------------------------------------------------------
#  MAIN PROGRAM - generated by the Rappture Builder
# ----------------------------------------------------------------------
import Rappture
import sys
from math import *

# open the XML file containing the run parameters
io = Rappture.library(sys.argv[1])

#########################################################
# Get input values from Rappture
#########################################################

# get input value for input.group(misfit_strains).number(misfit11)
misfit11 = float(io.get('input.group(misfit_strains).number(misfit11).current'))

# get input value for input.group(misfit_strains).number(misfit22)
misfit22 = float(io.get('input.group(misfit_strains).number(misfit22).current'))

# get input value for input.group(misfit_strains).number(misfit12)
misfit12 = float(io.get('input.group(misfit_strains).number(misfit12).current'))

# get input value for input.group(misfit_strains).number(misfit21)
misfit21 = float(io.get('input.group(misfit_strains).number(misfit21).current'))

# get input value for input.group(elastic_constants).group(ec_matrix).number(matrix_modulus)
matrix_modulus = float(io.get('input.group(elastic_constants).group(ec_matrix).number(matrix_modulus).current'))

# get input value for input.group(elastic_constants).group(ec_matrix).number(matrix_poisson)
matrix_poisson = float(io.get('input.group(elastic_constants).group(ec_matrix).number(matrix_poisson).current'))

# get input value for input.group(elastic_constants).group(ec_precip).number(precip_modulus)
precip_modulus = float(io.get('input.group(elastic_constants).group(ec_precip).number(precip_modulus).current'))

# get input value for input.group(elastic_constants).group(ec_precip).number(precip_poisson)
precip_poisson = float(io.get('input.group(elastic_constants).group(ec_precip).number(precip_poisson).current'))


#########################################################
#  Add your code here for the main body of your program
#########################################################

# spit out progress messages as you go along...
Rappture.Utils.progress(0, "Starting...")
Rappture.Utils.progress(5, "Loading data...")
Rappture.Utils.progress(50, "Half-way there")
Rappture.Utils.progress(100, "Done")

#########################################################
# Save output values back to Rappture
#########################################################

# save output value for output.image(result_image)
# data should be base64-encoded image data
io.put('output.image(result_image).current', imdata)

# save output value for output.number(aspect_ratio)
io.put('output.number(aspect_ratio).current',aspect_ratio)


Rappture.result(io)
sys.exit()
